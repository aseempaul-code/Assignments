+------------+---------------+---------------------+------------+----------------+
| CustomerID | Name          | Email               | JoinDate   | Country        |
+------------+---------------+---------------------+------------+----------------+
|          1 | Alice Johnson | alice@example.com   | 2023-01-15 | United States  |
|          2 | Bob Smith     | bob@example.com     | 2023-02-20 | Canada         |
|          3 | Charlie Brown | charlie@example.com | 2023-03-05 | United Kingdom |
+------------+---------------+---------------------+------------+----------------+

+---------+------------+------------+-------------+
| OrderID | CustomerID | OrderDate  | TotalAmount |
+---------+------------+------------+-------------+
|       1 |          1 | 2023-03-10 |       51.98 |
|       2 |          2 | 2023-03-15 |       79.99 |
|       3 |          3 | 2023-03-20 |       16.47 |
+---------+------------+------------+-------------+

+-----------+----------------------+-------------+-------+-------+
| ProductID | Name                 | Category    | Price | Stock |
+-----------+----------------------+-------------+-------+-------+
|         1 | Wireless Mouse       | Electronics | 25.99 |   150 |
|         2 | Bluetooth Headphones | Electronics | 79.99 |   100 |
|         3 | Notebook             | Stationery  |  5.49 |   300 |	
+-----------+----------------------+-------------+-------+-------+

+----------+-----------+------------+--------+-----------------------------------------------------+------------+
| ReviewID | ProductID | CustomerID | Rating | ReviewText                                          | ReviewDate |
+----------+-----------+------------+--------+-----------------------------------------------------+------------+
|        1 |         1 |          1 |      5 | Great product! Works perfectly.                     | 2023-03-12 |
|        2 |         2 |          2 |      4 | Good sound quality, but a bit pricey.               | 2023-03-18 |
|        3 |         3 |          3 |      3 | Decent notebook, but paper quality could be better. | 2023-03-22 |
+----------+-----------+------------+--------+-----------------------------------------------------+------------+

+------------+---------+--------------+--------------+------------+
| ShippingID | OrderID | ShippingDate | DeliveryDate | Status     |
+------------+---------+--------------+--------------+------------+
|          1 |       1 | 2023-03-11   | 2023-03-14   | Delivered  |
|          2 |       2 | 2023-03-16   | 2023-03-20   | Delivered  |
|          3 |       3 | 2023-03-21   | NULL         | In Transit |
+------------+---------+--------------+--------------+------------+




Step 2: Questions
Basic Queries
1. Retrieve the names and emails of all customers.
select Name,Email
from Customers;

2. List all products along with their categories and prices.
select Name ,Category,Price
from Products;

3. Find the total number of products available in the 'Electronics' category.
select count(*) as TotalProductsInventory,category
from Products
where Category='Electronics';



4. Display all orders placed by customers from the 'United States.'

select o.OrderID,o.CustomerID,o.OrderDate
from Orders as o
join Customers as c on c.CustomerID=o.CustomerID
where c.country='United States';

Intermediate Queries
5. Calculate the total revenue generated from all orders.

select sum(totalamount) as TotalRevenue
from Orders;

6. Find the name of the customer who placed the order with the highest total amount.
select c.Name,o.TotalAmount as HighestOrder
from Customers as c
join Orders as o on o.CustomerID=c.CustomerID
order by HighestOrder desc
limit 1;

7. Retrieve all products that have less than 50 units in stock

select * from Products
where Stock<50;

8. List all reviews with ratings of 4 or higher.

select * from Reviews
where Rating>4;

Joins
9. Write a query to display all orders along with the customer name and email.

select o.OrderID,c.CustomerID,o.OrderDate,o.TotalAmount,c.Name,c.Email
from Orders as o
left join Customers as c on c.CustomerID=o.CustomerID;

10. List all reviews along with the product name and customer name.

select r.* ,p.Name,c.Name
from Reviews as r
join Products as p on p.ProductID=r.ProductID
join Customers as c on c.CustomerID=r.CustomerID;

11. Calculate the average rating for each product.
 select p.Name as productname, avg(r.Rating) as avg_rating
 from Reviews as r
 join Products as p on p.ProductID=r.ProductID
 group by r.ProductID,p.Name

12. Find the total revenue generated by each product category.

13. Determine the country with the highest number of customers


SELECT Country, TotalCustomers
FROM (
    SELECT Country, COUNT(*) AS TotalCustomers,
           RANK() OVER (ORDER BY COUNT(*) DESC) AS RankOrder
    FROM Customers
    GROUP BY Country
) AS Subquery
WHERE RankOrder = 1;

Filtering
14. Retrieve all orders placed after March 1, 2023.

select * from Orders
where OrderDate > '2023-03-01';


15. Display all shipments that are still 'In Transit.'

select * from Shipping
where Status='In Transit';

Advanced Queries
16. Identify the top-rated product based on average rating.

select ProductID,avg(Rating) as AverageRating
from Reviews
group by ProductID
order by AverageRating desc
limit 1



17. List all customers who have written at least one review.

select c.CustomerID, c.Name
from Customers as c
where c.CustomerID in
(select r.CustomerID from Reviews as r);


18. Find all products that have been purchased but never reviewed.

select p.ProductID,p.Name
from Products as p
left join Reviews as r on r.ProductID=p.ProductID
where r.ReviewID is NULL;

Subqueries
19. Write a query to find the product with the highest total sales (quantity * price).




20. Retrieve all products that have not been purchased yet.
select p.ProductID,p.Name
from Products as p
left join Orders as o on o.ProductID=p.ProductID
where o.ProductId is null;
