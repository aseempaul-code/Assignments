Customers
+------------+---------------+---------------------+------------+-------------+
| CustomerID | Name          | Email               | JoinDate   | City        |
+------------+---------------+---------------------+------------+-------------+
|          1 | Alice Johnson | alice@example.com   | 2022-01-15 | New York    |
|          2 | Bob Smith     | bob@example.com     | 2022-03-10 | Los Angeles |
|          3 | Charlie Brown | charlie@example.com | 2023-02-05 | Chicago     |
+------------+---------------+---------------------+------------+-------------+


 Deliveries
+------------+---------+-----------------+--------------+
| DeliveryID | OrderID | DeliveryPerson  | DeliveryTime |
+------------+---------+-----------------+--------------+
|          1 |       1 | John Doe        |           30 |
|          2 |       2 | Jane Smith      |           25 |
|          3 |       3 | Carlos Gonzalez |           40 |
+------------+---------+-----------------+--------------+


 Dishes
+--------+------------------+--------------+-------+
| DishID | Name             | RestaurantID | Price |
+--------+------------------+--------------+-------+
|      1 | Margherita Pizza |            1 | 12.99 |
|      2 | Pepperoni Pizza  |            1 | 14.99 |
|      3 | Sushi Platter    |            2 | 22.99 |
|      4 | Taco Combo       |            3 |  9.99 |
+--------+------------------+--------------+-------+


Orders
+---------+------------+--------------+------------+-------------+
| OrderID | CustomerID | RestaurantID | OrderDate  | TotalAmount |
+---------+------------+--------------+------------+-------------+
|       1 |          1 |            1 | 2023-10-10 |       27.98 |
|       2 |          2 |            2 | 2023-10-11 |       22.99 |
|       3 |          3 |            3 | 2023-10-12 |       19.98 |
+---------+------------+--------------+------------+-------------+


Restaurants
+--------------+---------------+----------+-------------+--------+
| RestaurantID | Name          | Cuisine  | City        | Rating |
+--------------+---------------+----------+-------------+--------+
|            1 | Pizza Palace  | Italian  | New York    |   4.50 |
|            2 | Sushi Central | Japanese | Los Angeles |   4.80 |
|            3 | Taco Town     | Mexican  | Chicago     |   4.20 |
+--------------+---------------+----------+-------------+--------+


Reviews
+----------+------------+---------+--------+-------------------------------------------+------------+
| ReviewID | CustomerID | OrderID | Rating | ReviewText                                | ReviewDate |
+----------+------------+---------+--------+-------------------------------------------+------------+
|        1 |          1 |       1 |      5 | Excellent pizza and quick delivery!       | 2023-10-11 |
|        2 |          2 |       2 |      4 | Great sushi, but delivery was a bit late. | 2023-10-12 |
|        3 |          3 |       3 |      3 | Tacos were okay, delivery took too long.  | 2023-10-13 |
+----------+------------+---------+--------+-------------------------------------------+------------+

Basic Queries
1. Retrieve the list of all dishes along with their restaurant names and prices.

select d.Name,r.Name,d.Price
from Dishes as d
left join Restaurants as r on r.RestaurantID=d.RestaurantID;

2. Find the average rating of all restaurants in New York.
select City,avg(Rating) as AverageRating
from Restaurants
where City='New York';

Intermediate Queries
3. Calculate the total revenue generated by each restaurant.

select r.Name, sum(o.TotalAmount) as TotalRevenueGenerated
from Restaurants as r
join Orders as o on o.RestaurantID=r.RestaurantID
group by o.RestaurantID;


4. List the names of customers who have ordered more than once.

select c.Name,count(o.OrderID) as TotalOrders
from Customers as c
join Orders as o on o.CustomerID=c.CustomerID
group by c.Name
having TotalOrders>1;

5. Use a window function to rank restaurants based on their average customer ratings.

select Name,
rank() over (order by Rating) as RankingByRate
from Restaurants;

6. Calculate the cumulative total revenue for each restaurant.

Select r.RestaurantID,r.Name,
sum(o.TotalAmount) over (Partition by o.RestaurantID order by o.RestaurantID) as TotalRevenue 
from Restaurants as r 
join Orders as o on o.RestaurantID=r.RestaurantID;

7. Identify the top 2 most ordered dishes in each city using a window function.


8. Find the average delivery time for each delivery person and rank them.

select DeliveryPerson,avg(DeliveryTime) as AvgDeliveryTime,
rank() over (order by avg(DeliveryTime) ASC) as RankPosition
from Deliveries
group by DeliveryPerson;

Aggregations and Grouping
9. Retrieve the count of orders placed in each city.

select c.City,count(o.OrderID) as OrdersPlaced
from Customers as c
join orders as o on o.CustomerID = c.CustomerID
group by c.City;


10.Calculate the average order value for each cuisine type.

select r.Cuisine, avg(o.TotalAmount) as OrderValue
from Orders as o
join Restaurants as r on o.RestaurantID=r.RestaurantID
group by r.Cuisine;

Filtering
11.List all reviews with a rating below 4.

select * 
from Reviews
where Rating<4;

12.Display all orders placed after October 1, 2023
select *
from Orders
where OrderDate>2023-10-01;

Joins
13.Write a query to display order details along with the restaurant and customer
names.

select o.*,r.Name as RestaurantName ,c.Name as CustomerName
from Orders as o
join Restaurants as r on r.RestaurantID=o.RestaurantID
join Customers as c on c.CustomerID=o.CustomerID;


14.Show all dishes ordered by each customer.
No common Id given

Subqueries
15.Find the name of the customer who gave the lowest rating.

select Name from Customers
where CustomerID = (
select CustomerID from Reviews 
where Rating = (
select min(Rating) from Reviews
)
)
;


16.Retrieve the most expensive dish for each cuisine type.


select d.Name,d.Price,r.Cuisine from Dishes d	
join Restaurants as r on r.RestaurantID=d.RestaurantID
where d.Price=(
	select max(Price)
	from Dishes
);



Analytical Queries
17.Identify the delivery person with the fastest average delivery time.
select DeliveryID,DeliveryPerson,avg(DeliveryTime) as FastestDelivery
from Deliveries
group by DeliveryID
order by FastestDelivery 
limit 1;


18.Calculate the average delivery time for all orders handled by "Carlos Gonzalez."

select DeliveryPerson,avg(DeliveryTime) as AvgDeliveryTime
from Deliveries
where DeliveryPerson='Carlos Gonzalez'
group by DeliveryPerson;


19.Use a window function to assign a rank to each review based on its date, grouped by customer.

select CustomerID,OrderID,ReviewID,ReviewDate,Rating,
rank() over (partition by CustomerID order by ReviewDate) as Ranking
from Reviews;

20.Calculate the running total of revenue for orders by each customer.

select CustomerID ,
sum(TotalAmount) over (partition by CustomerID order by OrderID) as RunningTotal
from Orders;




















